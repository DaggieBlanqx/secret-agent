(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{695:function(t,e,o){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},947:function(t,e,o){"use strict";o.r(e);var r=o(1),n=o(695),i=o(0);function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}i.a.config.optionMergeStrategies;var a={VueRemarkRoot:n.a},c=function(t){var e=t.options.components=t.options.components||{},o=t.options.computed=t.options.computed||{};Object.keys(a).forEach((function(t){"object"===s(a[t])&&"function"==typeof a[t].render?e[t]=a[t]:o[t]=function(){return a[t]}}))},p=i.a.config.optionMergeStrategies,d="__vueRemarkFrontMatter",u={excerpt:null,title:"DOMException"};var h=function(t){t.options[d]&&(t.options[d]=u),i.a.util.defineReactive(t.options,d,u),t.options.computed=p.computed({$frontmatter:function(){return t.options[d]}},t.options.computed)},v=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("VueRemarkRoot",[o("h1",{attrs:{id:"domexception"}},[o("a",{attrs:{href:"#domexception","aria-hidden":"true"}},[t._v("#")]),t._v("DOMException")]),o("div",{staticClass:"overview"},[o("span",{staticClass:"seoSummary"},[t._v("The "),o("code",[o("strong",[t._v("DOMException")])]),t._v(" interface represents an abnormal event (called an "),o("strong",[t._v("exception")]),t._v(") which occurs as a result of calling a method or accessing a property of a web API.")]),t._v(" This is basically how error conditions are described in web APIs.")]),o("div",{staticClass:"overview"},[t._v("Each exception has a "),o("strong",[t._v("name")]),t._v(', which is a short "CamelCase" style string identifying the error or abnormal condition.')]),o("h2",{attrs:{id:"properties"}},[o("a",{attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v("Properties")]),o("ul",{staticClass:"items properties"},[o("li",[o("a",{attrs:{href:""}},[t._v("code")]),o("div",[t._v("Returns a "),o("code",[t._v("short")]),t._v(" that contains one of the error code constants, or "),o("code",[t._v("0")]),t._v(" if none match. This field is used for historical reasons. New DOM exceptions don't use this anymore: they put this info in the "),o("a",{attrs:{href:"/en-US/docs/Web/API/DOMException/name",title:"The name read-only property of the DOMException interface returns a DOMString that contains one of the strings associated with an error name."}},[o("code",[t._v("DOMException.name")])]),t._v(" attribute.")])]),o("li",[o("a",{attrs:{href:""}},[t._v("message")]),o("div",[t._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[o("code",[t._v("DOMString")])]),t._v(" representing a message or description associated with the given "),o("a",{attrs:{href:"/en-US/docs/Web/API/DOMException#Error_names"}},[t._v("error name")]),t._v(".")])]),o("li",[o("a",{attrs:{href:""}},[t._v("name")]),o("div",[t._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[o("code",[t._v("DOMString")])]),t._v(" that contains one of the strings associated with an "),o("a",{attrs:{href:"#Error_names"}},[t._v("error name")]),t._v(".")])])]),o("h2",{attrs:{id:"methods"}},[o("a",{attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v("Methods")]),o("ul",{staticClass:"items methods"}),o("h2",{attrs:{id:"events"}},[o("a",{attrs:{href:"#events","aria-hidden":"true"}},[t._v("#")]),t._v("Events")])])}),[],!1,null,null,null);"function"==typeof c&&c(v),"function"==typeof h&&h(v);e.default=v.exports}}]);