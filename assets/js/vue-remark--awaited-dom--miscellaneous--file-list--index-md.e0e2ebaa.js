(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{695:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},853:function(e,t,o){"use strict";o.r(t);var i=o(1),n=o(695),r=o(0);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var a={VueRemarkRoot:n.a},l=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===s(a[e])&&"function"==typeof a[e].render?t[e]=a[e]:o[e]=function(){return a[e]}}))},c=r.a.config.optionMergeStrategies,f="__vueRemarkFrontMatter",u={excerpt:null,title:"FileList"};var d=function(e){e.options[f]&&(e.options[f]=u),r.a.util.defineReactive(e.options,f,u),e.options.computed=c.computed({$frontmatter:function(){return e.options[f]}},e.options.computed)},p=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"filelist"}},[o("a",{attrs:{href:"#filelist","aria-hidden":"true"}},[e._v("#")]),e._v("FileList")]),o("div",{staticClass:"overview"},[e._v("An object of this type is returned by the "),o("code",[e._v("files")]),e._v(" property of the HTML "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/input",title:"The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. "}},[o("code",[e._v("<input>")])]),e._v(" element; this lets you access the list of files selected with the "),o("code",[e._v('<input type="file">')]),e._v(" element. It's also used for a list of files dropped into web content when using the drag and drop API; see the "),o("a",{attrs:{href:"/en-US/docs/DragDrop/DataTransfer",title:"DragDrop/DataTransfer"}},[o("code",[e._v("DataTransfer")])]),e._v(" object for details on this usage.")]),o("h2",{attrs:{id:"properties"}},[o("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),o("ul",{staticClass:"items properties"},[o("li",[o("a",{attrs:{href:""}},[e._v("length")]),o("div",[e._v("A read-only value indicating the number of files in the list.")])])]),o("h2",{attrs:{id:"methods"}},[o("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),o("ul",{staticClass:"items methods"},[o("li",[o("a",{attrs:{href:""}},[e._v("item()")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/DOM/File",title:"DOM/File"}},[o("code",[e._v("File")])]),e._v(" object representing the file at the specified index in the file list.")])])]),o("h2",{attrs:{id:"events"}},[o("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof l&&l(p),"function"==typeof d&&d(p);t.default=p.exports}}]);