(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{695:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},885:function(e,t,o){"use strict";o.r(t);var n=o(1),a=o(695),i=o(0);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}i.a.config.optionMergeStrategies;var r={VueRemarkRoot:a.a},d=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(r).forEach((function(e){"object"===s(r[e])&&"function"==typeof r[e].render?t[e]=r[e]:o[e]=function(){return r[e]}}))},c=i.a.config.optionMergeStrategies,u="__vueRemarkFrontMatter",m={excerpt:null,title:"[AwaitedDOM](/docs/basic-interfaces/awaited-dom) <span>/</span> HTMLAudioElement"};var p=function(e){e.options[u]&&(e.options[u]=m),i.a.util.defineReactive(e.options,u,m),e.options.computed=c.computed({$frontmatter:function(){return e.options[u]}},e.options.computed)},l=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"awaiteddom-spanspan-htmlaudioelement"}},[o("a",{attrs:{href:"#awaiteddom-spanspan-htmlaudioelement","aria-hidden":"true"}},[e._v("#")]),o("a",{attrs:{href:"/docs/basic-interfaces/awaited-dom"}},[e._v("AwaitedDOM")]),o("span",[e._v("/")]),e._v(" HTMLAudioElement")]),o("div",{staticClass:"overview"},[o("span",{staticClass:"seoSummary"},[e._v("The "),o("strong",[o("code",[e._v("HTMLAudioElement")])]),e._v(" interface provides access to the properties of "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/audio",title:"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream."}},[o("code",[e._v("<audio>")])]),e._v(" elements, as well as methods to manipulate them.")]),e._v(" It's based on, and inherits properties and methods from,Â the "),o("a",{attrs:{href:"/en-US/docs/Web/API/HTMLMediaElement",title:"The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video."}},[o("code",[e._v("HTMLMediaElement")])]),e._v(" interface.")])])}),[],!1,null,null,null);"function"==typeof d&&d(l),"function"==typeof p&&p(l);t.default=l.exports}}]);