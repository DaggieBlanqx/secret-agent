(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{695:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},858:function(e,t,o){"use strict";o.r(t);var n=o(1),i=o(695),r=o(0);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var a={VueRemarkRoot:i.a},d=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===s(a[e])&&"function"==typeof a[e].render?t[e]=a[e]:o[e]=function(){return a[e]}}))},u=r.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",m={excerpt:null,title:"HTMLAudioElement"};var p=function(e){e.options[c]&&(e.options[c]=m),r.a.util.defineReactive(e.options,c,m),e.options.computed=u.computed({$frontmatter:function(){return e.options[c]}},e.options.computed)},l=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"htmlaudioelement"}},[o("a",{attrs:{href:"#htmlaudioelement","aria-hidden":"true"}},[e._v("#")]),e._v("HTMLAudioElement")]),o("div",{staticClass:"overview"},[o("span",{staticClass:"seoSummary"},[e._v("The "),o("strong",[o("code",[e._v("HTMLAudioElement")])]),e._v(" interface provides access to the properties of "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/audio",title:"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream."}},[o("code",[e._v("<audio>")])]),e._v(" elements, as well as methods to manipulate them.")]),e._v(" It's based on, and inherits properties and methods from,Â the "),o("a",{attrs:{href:"/en-US/docs/Web/API/HTMLMediaElement",title:"The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video."}},[o("code",[e._v("HTMLMediaElement")])]),e._v(" interface.")]),o("h2",{attrs:{id:"properties"}},[o("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),o("ul",{staticClass:"items properties"}),o("h2",{attrs:{id:"methods"}},[o("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),o("ul",{staticClass:"items methods"}),o("h2",{attrs:{id:"events"}},[o("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof d&&d(l),"function"==typeof p&&p(l);t.default=l.exports}}]);