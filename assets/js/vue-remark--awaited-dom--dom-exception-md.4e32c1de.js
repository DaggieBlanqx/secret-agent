(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{695:function(t,e,n){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},973:function(t,e,n){"use strict";n.r(e);var r=n(1),a=n(695),o=n(0);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}o.a.config.optionMergeStrategies;var s={VueRemarkRoot:a.a},c=function(t){var e=t.options.components=t.options.components||{},n=t.options.computed=t.options.computed||{};Object.keys(s).forEach((function(t){"object"===i(s[t])&&"function"==typeof s[t].render?e[t]=s[t]:n[t]=function(){return s[t]}}))},d=o.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",u={excerpt:null,title:"[AwaitedDOM](/docs/basic-interfaces/awaited-dom) <span>/</span> DOMException"};var v=function(t){t.options[p]&&(t.options[p]=u),o.a.util.defineReactive(t.options,p,u),t.options.computed=d.computed({$frontmatter:function(){return t.options[p]}},t.options.computed)},l=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("VueRemarkRoot",[n("h1",{attrs:{id:"awaiteddom-spanspan-domexception"}},[n("a",{attrs:{href:"#awaiteddom-spanspan-domexception","aria-hidden":"true"}},[t._v("#")]),n("a",{attrs:{href:"/docs/basic-interfaces/awaited-dom"}},[t._v("AwaitedDOM")]),n("span",[t._v("/")]),t._v(" DOMException")]),n("div",{staticClass:"overview"},[n("span",{staticClass:"seoSummary"},[t._v("The "),n("code",[n("strong",[t._v("DOMException")])]),t._v(" interface represents an abnormal event (called an "),n("strong",[t._v("exception")]),t._v(") which occurs as a result of calling a method or accessing a property of a web API.")]),t._v(" This is basically how error conditions are described in web APIs.")]),n("div",{staticClass:"overview"},[t._v("Each exception has a "),n("strong",[t._v("name")]),t._v(', which is a short "CamelCase" style string identifying the error or abnormal condition.')]),n("h2",{attrs:{id:"properties"}},[n("a",{attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v("Properties")]),n("h3",{attrs:{id:"code"}},[n("a",{attrs:{href:"#code","aria-hidden":"true"}},[t._v("#")]),t._v(".code "),n("div",{staticClass:"specs"},[n("i",[t._v("W3C")])])]),n("p",[t._v("Returns a "),n("code",[t._v("short")]),t._v(" that contains one of the error code constants, or "),n("code",[t._v("0")]),t._v(" if none match. This field is used for historical reasons. New DOM exceptions don't use this anymore: they put this info in the "),n("a",{attrs:{href:"/en-US/docs/Web/API/DOMException/name",title:"The name read-only property of the DOMException interface returns a DOMString that contains one of the strings associated with an error name."}},[n("code",[t._v("DOMException.name")])]),t._v(" attribute.")]),n("h4",{attrs:{id:"type-null"}},[n("a",{attrs:{href:"#type-null","aria-hidden":"true"}},[t._v("#")]),n("strong",[t._v("Type")]),t._v(": "),n("code",{pre:!0},[t._v("null")])]),n("h3",{attrs:{id:"message"}},[n("a",{attrs:{href:"#message","aria-hidden":"true"}},[t._v("#")]),t._v(".message "),n("div",{staticClass:"specs"},[n("i",[t._v("W3C")])])]),n("p",[t._v("Returns a "),n("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[n("code",[t._v("DOMString")])]),t._v(" representing a message or description associated with the given "),n("a",{attrs:{href:"/en-US/docs/Web/API/DOMException#Error_names"}},[t._v("error name\n")]),t._v(".")]),n("h4",{attrs:{id:"type-null-1"}},[n("a",{attrs:{href:"#type-null-1","aria-hidden":"true"}},[t._v("#")]),n("strong",[t._v("Type")]),t._v(": "),n("code",{pre:!0},[t._v("null")])]),n("h3",{attrs:{id:"name"}},[n("a",{attrs:{href:"#name","aria-hidden":"true"}},[t._v("#")]),t._v(".name "),n("div",{staticClass:"specs"},[n("i",[t._v("W3C")])])]),n("p",[t._v("Returns a "),n("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[n("code",[t._v("DOMString")])]),t._v(" that contains one of the strings associated with an "),n("a",{attrs:{href:"#Error_names"}},[t._v("error name\n")]),t._v(".")]),n("h4",{attrs:{id:"type-null-2"}},[n("a",{attrs:{href:"#type-null-2","aria-hidden":"true"}},[t._v("#")]),n("strong",[t._v("Type")]),t._v(": "),n("code",{pre:!0},[t._v("null")])])])}),[],!1,null,null,null);"function"==typeof c&&c(l),"function"==typeof v&&v(l);e.default=l.exports}}]);