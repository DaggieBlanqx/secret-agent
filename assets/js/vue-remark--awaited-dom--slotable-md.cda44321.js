(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{695:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},837:function(e,t,o){"use strict";o.r(t);var n=o(1),a=o(695),s=o(0);function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}s.a.config.optionMergeStrategies;var r={VueRemarkRoot:a.a},l=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(r).forEach((function(e){"object"===i(r[e])&&"function"==typeof r[e].render?t[e]=r[e]:o[e]=function(){return r[e]}}))},c=s.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",d={excerpt:null,title:"[AwaitedDOM](/docs/basic-interfaces/awaited-dom) <span>/</span> Slotable"};var u=function(e){e.options[p]&&(e.options[p]=d),s.a.util.defineReactive(e.options,p,d),e.options.computed=c.computed({$frontmatter:function(){return e.options[p]}},e.options.computed)},h=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"awaiteddom-spanspan-slotable"}},[o("a",{attrs:{href:"#awaiteddom-spanspan-slotable","aria-hidden":"true"}},[e._v("#")]),o("a",{attrs:{href:"/docs/basic-interfaces/awaited-dom"}},[e._v("AwaitedDOM")]),o("span",[e._v("/")]),e._v(" Slotable")]),o("div",{staticClass:"overview"},[e._v("The "),o("code",[e._v("Slotable")]),e._v(" mixin defines features that allow nodes to become the contents of a "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/slot",title:"The HTML <slot> element—part of the Web Components technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together."}},[o("code",[e._v("<slot>")])]),e._v(" element — the following features are included in both "),o("a",{attrs:{href:"/en-US/docs/Web/API/Element",title:"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element."}},[o("code",[e._v("Element")])]),e._v(" and "),o("a",{attrs:{href:"/en-US/docs/Web/API/Text",title:"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children."}},[o("code",[e._v("Text")])]),e._v(".")]),o("h2",{attrs:{id:"properties"}},[o("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),o("h3",{attrs:{id:"assignedSlot"}},[o("a",{attrs:{href:"#assignedSlot","aria-hidden":"true"}},[e._v("#")]),e._v(".assignedSlot "),o("div",{staticClass:"specs"},[o("i",[e._v("W3C")])])]),o("p",[e._v("Returns the "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/slot",title:"The HTML <slot> element—part of the Web Components technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together."}},[o("code",[e._v("<slot>")])]),e._v(" the node is inserted in.")]),o("h4",{attrs:{id:"type-null"}},[o("a",{attrs:{href:"#type-null","aria-hidden":"true"}},[e._v("#")]),o("strong",[e._v("Type")]),e._v(": "),o("code",{pre:!0},[e._v("null")])])])}),[],!1,null,null,null);"function"==typeof l&&l(h),"function"==typeof u&&u(h);t.default=h.exports}}]);