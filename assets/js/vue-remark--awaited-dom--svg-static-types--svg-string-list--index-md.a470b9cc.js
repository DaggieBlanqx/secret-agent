(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{695:function(e,t,i){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},783:function(e,t,i){"use strict";i.r(t);var o=i(1),n=i(695),s=i(0);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}s.a.config.optionMergeStrategies;var a={VueRemarkRoot:n.a},c=function(e){var t=e.options.components=e.options.components||{},i=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===r(a[e])&&"function"==typeof a[e].render?t[e]=a[e]:i[e]=function(){return a[e]}}))},l=s.a.config.optionMergeStrategies,h="__vueRemarkFrontMatter",d={excerpt:null,title:"SVGStringList"};var p=function(e){e.options[h]&&(e.options[h]=d),s.a.util.defineReactive(e.options,h,d),e.options.computed=l.computed({$frontmatter:function(){return e.options[h]}},e.options.computed)},v=Object(o.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("VueRemarkRoot",[i("h1",{attrs:{id:"svgstringlist"}},[i("a",{attrs:{href:"#svgstringlist","aria-hidden":"true"}},[e._v("#")]),e._v("SVGStringList")]),i("div",{staticClass:"overview"},[e._v("The "),i("code",[e._v("SVGStringList")]),e._v(" defines a list of "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[i("code",[e._v("DOMString")])]),e._v(" objects.")]),i("div",{staticClass:"overview"},[e._v("An "),i("code",[e._v("SVGStringList")]),e._v(" object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.")]),i("h2",{attrs:{id:"properties"}},[i("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),i("ul",{staticClass:"items properties"},[i("li",[i("a",{attrs:{href:""}},[e._v("length")]),i("div",[e._v("A mirror of the value in "),i("code",[e._v("numberOfItems")]),e._v(", for consistency with other interfaces. "),i("span",{staticClass:"icon-only-inline",attrs:{title:"This API has not been standardized."}},[i("i",{staticClass:"icon-warning-sign"})])])]),i("li",[i("a",{attrs:{href:""}},[e._v("numberOfItems")]),i("div",[e._v("The number of items in the list.")])])]),i("h2",{attrs:{id:"methods"}},[i("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),i("ul",{staticClass:"items methods"},[i("li",[i("a",{attrs:{href:""}},[e._v("appendItem()")]),i("div",[i("p",[e._v("Inserts a new item at the end of the list. If "),i("code",[e._v("newItem")]),e._v(" is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy.")]),i("p",[i("strong",[e._v("Exceptions:")])]),i("ul",[i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("NO_MODIFICATION_ALLOWED_ERR")]),e._v(" is raised when the list corresponds to a read only attribute or when the object itself is read only.")])])])]),i("li",[i("a",{attrs:{href:""}},[e._v("clear()")]),i("div",[i("p",[e._v("Clears all existing current items from the list, with the result being an empty list.")]),i("p",[i("strong",[e._v("Exceptions:")])]),i("ul",[i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("NO_MODIFICATION_ALLOWED_ERR")]),e._v(" is raised when the list corresponds to a read only attribute or when the object itself is read only.")])])])]),i("li",[i("a",{attrs:{href:""}},[e._v("getItem()")]),i("div",[i("p",[e._v("Returns the specified item from the list. The returned item is the item itself and not a copy. Any changes made to the item are immediately reflected in the list. The first item is numberÂ 0.")]),i("p",[i("strong",[e._v("Exceptions:")])]),i("ul",[i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("NO_MODIFICATION_ALLOWED_ERR")]),e._v(" is raised when the list corresponds to a read only attribute or when the object itself is read only.")])])])]),i("li",[i("a",{attrs:{href:""}},[e._v("initialize()")]),i("div",[i("p",[e._v("Clears all existing current items from the list and re-initializes the list to hold the single item specified by the parameter. If the inserted item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. The return value is the item inserted into the list.")]),i("p",[i("strong",[e._v("Exceptions:")])]),i("ul",[i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("NO_MODIFICATION_ALLOWED_ERR")]),e._v(" is raised when the list corresponds to a read only attribute or when the object itself is read only.")])])])]),i("li",[i("a",{attrs:{href:""}},[e._v("insertItemBefore()")]),i("div",[i("p",[e._v("Inserts a new item into the list at the specified position. The first item is number 0. If "),i("code",[e._v("newItem")]),e._v(" is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to insert before is before the removal of the item. If the "),i("code",[e._v("index")]),e._v(" is equal to 0, then the new item is inserted at the front of the list. If the index is greater than or equal to "),i("code",[e._v("numberOfItems")]),e._v(", then the new item is appended to the end of the list.")]),i("p",[i("strong",[e._v("Exceptions:")])]),i("ul",[i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("NO_MODIFICATION_ALLOWED_ERR")]),e._v(" is raised when the list corresponds to a read only attribute or when the object itself is read only.")])])])]),i("li",[i("a",{attrs:{href:""}},[e._v("removeItem()")]),i("div",[i("p",[e._v("Removes an existing item from the list.")]),i("p",[i("strong",[e._v("Exceptions:")])]),i("ul",[i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("NO_MODIFICATION_ALLOWED_ERR")]),e._v(" is raised when the list corresponds to a read only attribute or when the object itself is read only.")]),i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("INDEX_SIZE_ERR")]),e._v(" is raised if the index number is greater than or equal to "),i("code",[e._v("numberOfItems")]),e._v(".")])])])]),i("li",[i("a",{attrs:{href:""}},[e._v("replaceItem()")]),i("div",[i("p",[e._v("Replaces an existing item in the list with a new item. If "),i("code",[e._v("newItem")]),e._v(" is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to replace is before the removal of the item.")]),i("p",[i("strong",[e._v("Exceptions:")])]),i("ul",[i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("NO_MODIFICATION_ALLOWED_ERR")]),e._v(" is raised when the list corresponds to a read only attribute or when the object itself is read only.")]),i("li",[e._v("a "),i("a",{attrs:{href:"/en-US/docs/Web/API/DOMException",title:"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API."}},[i("code",[e._v("DOMException")])]),e._v(" with code "),i("code",[e._v("INDEX_SIZE_ERR")]),e._v(" is raised if the index number is greater than or equal to "),i("code",[e._v("numberOfItems")]),e._v(".")])])])])]),i("h2",{attrs:{id:"events"}},[i("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof c&&c(v),"function"==typeof p&&p(v);t.default=v.exports}}]);