(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{695:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},891:function(e,t,o){"use strict";o.r(t);var n=o(1),i=o(695),s=o(0);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}s.a.config.optionMergeStrategies;var r={VueRemarkRoot:i.a},l=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(r).forEach((function(e){"object"===a(r[e])&&"function"==typeof r[e].render?t[e]=r[e]:o[e]=function(){return r[e]}}))},c=s.a.config.optionMergeStrategies,h="__vueRemarkFrontMatter",d={excerpt:null,title:"HTMLOptionElement"};var p=function(e){e.options[h]&&(e.options[h]=d),s.a.util.defineReactive(e.options,h,d),e.options.computed=c.computed({$frontmatter:function(){return e.options[h]}},e.options.computed)},f=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"htmloptionelement"}},[o("a",{attrs:{href:"#htmloptionelement","aria-hidden":"true"}},[e._v("#")]),e._v("HTMLOptionElement")]),o("div",{staticClass:"overview"},[e._v("The "),o("strong",[o("code",[e._v("HTMLOptionElement")])]),e._v(" interface represents "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/option",title:"The HTML <option> element is used to define an item contained in a <select>, an <optgroup>, or a <datalist>&nbsp;element. As such,&nbsp;<option>&nbsp;can represent menu items in popups and other lists of items in an HTML document."}},[o("code",[e._v("<option>")])]),e._v(" elements and inherits all classes and methods of the "),o("a",{attrs:{href:"/en-US/docs/Web/API/HTMLElement",title:"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it."}},[o("code",[e._v("HTMLElement")])]),e._v(" interface.")]),o("h2",{attrs:{id:"properties"}},[o("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),o("ul",{staticClass:"items properties"},[o("li",[o("a",{attrs:{href:""}},[e._v("defaultSelected")]),o("div",[e._v("Contains the initial value of the "),o("code",[o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/option#attr-selected"}},[e._v("selected")])]),e._v(" HTML attribute, indicating whether the option is selected by default or not.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("disabled")]),o("div",[e._v("Reflects the value of the "),o("code",[o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/option#attr-disabled"}},[e._v("disabled")])]),e._v(" HTMLÂ attribute, which indicates that the option is unavailable to be selected. An option can also be disabled if it is a child of an "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/optgroup",title:"The HTML <optgroup> element creates a grouping of options within a <select> element."}},[o("code",[e._v("<optgroup>")])]),e._v(" element that is disabled.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("form")]),o("div",[e._v("If the option is a descendent of a "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/select",title:"The HTML <select> element represents a control that provides a menu of options"}},[o("code",[e._v("<select>")])]),e._v(" element, then this property has the same value as the "),o("code",[e._v("form")]),e._v(" property of the corresponding "),o("a",{attrs:{href:"/en-US/docs/Web/API/HTMLSelectElement",title:"The HTMLSelectElement interface represents a <select> HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface."}},[o("code",[e._v("HTMLSelectElement")])]),e._v(" object; otherwise, it is "),o("code",[e._v("null")]),e._v(".")])]),o("li",[o("a",{attrs:{href:""}},[e._v("index")]),o("div",[e._v("The position of the option within the list of options it belongs to, in tree-order. If the option is not part of a list of options, like when it is part of the "),o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/datalist",title:"The HTML <datalist> element contains a set of <option> elements that represent the permissible or recommended options available to choose from within other controls."}},[o("code",[e._v("<datalist>")])]),e._v(" element, the value is "),o("code",[e._v("0")]),e._v(".")])]),o("li",[o("a",{attrs:{href:""}},[e._v("label")]),o("div",[e._v("Reflects the value of the "),o("code",[o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/option#attr-label"}},[e._v("label")])]),e._v(" HTML attribute, which provides a label for the option. If this attribute isn't specifically set, reading it returns the element's text content.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("selected")]),o("div",[e._v("Indicates whether the option is currently selected.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("text")]),o("div",[e._v("Contains the text content of the element.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("value")]),o("div",[e._v("Reflects the value of the "),o("code",[o("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/option#attr-value"}},[e._v("value")])]),e._v(" HTML attribute, if it exists; otherwise reflects value of the "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node/textContent",title:"The textContent property of the Node interface represents the text content of the node and its descendants."}},[o("code",[e._v("Node.textContent")])]),e._v(" property.")])])]),o("h2",{attrs:{id:"methods"}},[o("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),o("ul",{staticClass:"items methods"}),o("h2",{attrs:{id:"events"}},[o("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof l&&l(f),"function"==typeof p&&p(f);t.default=f.exports}}]);