(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{695:function(e,t,r){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},790:function(e,t,r){"use strict";r.r(t);var n=r(1),o=r(695),i=r(0);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}i.a.config.optionMergeStrategies;var s={VueRemarkRoot:o.a},c=function(e){var t=e.options.components=e.options.components||{},r=e.options.computed=e.options.computed||{};Object.keys(s).forEach((function(e){"object"===a(s[e])&&"function"==typeof s[e].render?t[e]=s[e]:r[e]=function(){return s[e]}}))},d=i.a.config.optionMergeStrategies,u="__vueRemarkFrontMatter",p={excerpt:null,title:"[AwaitedDOM](/docs/basic-interfaces/awaited-dom) <span>/</span> XMLSerializer"};var l=function(e){e.options[u]&&(e.options[u]=p),i.a.util.defineReactive(e.options,u,p),e.options.computed=d.computed({$frontmatter:function(){return e.options[u]}},e.options.computed)},m=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("VueRemarkRoot",[r("h1",{attrs:{id:"awaiteddom-spanspan-xmlserializer"}},[r("a",{attrs:{href:"#awaiteddom-spanspan-xmlserializer","aria-hidden":"true"}},[e._v("#")]),r("a",{attrs:{href:"/docs/basic-interfaces/awaited-dom"}},[e._v("AwaitedDOM")]),r("span",[e._v("/")]),e._v(" XMLSerializer")]),r("div",{staticClass:"overview"},[r("span",{staticClass:"seoSummary"},[e._v("The "),r("code",[e._v("XMLSerializer")]),e._v(" interface provides the "),r("a",{attrs:{href:"/en-US/docs/Web/API/XMLSerializer/serializeToString",title:"The XMLSerializer method serializeToString() constructs a string representing the specified DOM tree in XML form."}},[r("code",[e._v("serializeToString()")])]),e._v(" method to construct an XML string representing a "),r("a",{staticClass:"glossaryLink",attrs:{href:"/en-US/docs/Glossary/DOM",title:"DOM: The DOM (Document Object Model) is an API that represents and interacts with any HTML or XML document. The DOM is a document model loaded in the browser and representing the document as a node tree, where each node represents part of the document (e.g. an element, text string, or comment)."}},[e._v("DOM")]),e._v(" tree.")])]),r("h2",{attrs:{id:"methods"}},[r("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),r("h3",{attrs:{id:"serializeToString"}},[r("a",{attrs:{href:"#serializeToString","aria-hidden":"true"}},[e._v("#")]),e._v(".serializeToString"),r("em",[e._v("(...args)")]),r("div",{staticClass:"specs"},[r("i",[e._v("W3C")])])]),r("p",[e._v("Returns the serialized subtree of a string.")]),r("h4",{attrs:{id:"arguments"}},[r("a",{attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),r("strong",[e._v("Arguments")]),e._v(":")]),r("ul",[r("li",[e._v("none")])]),r("h4",{attrs:{id:"returns-promisevoid"}},[r("a",{attrs:{href:"#returns-promisevoid","aria-hidden":"true"}},[e._v("#")]),r("strong",[e._v("Returns")]),e._v(": "),r("code",{pre:!0},[e._v("Promise<void>")])])])}),[],!1,null,null,null);"function"==typeof c&&c(m),"function"==typeof l&&l(m);t.default=m.exports}}]);