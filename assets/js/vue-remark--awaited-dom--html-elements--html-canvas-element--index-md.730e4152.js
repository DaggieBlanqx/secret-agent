(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{695:function(e,t,a){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},860:function(e,t,a){"use strict";a.r(t);var n=a(1),i=a(695),r=a(0);function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var s={VueRemarkRoot:i.a},c=function(e){var t=e.options.components=e.options.components||{},a=e.options.computed=e.options.computed||{};Object.keys(s).forEach((function(e){"object"===o(s[e])&&"function"==typeof s[e].render?t[e]=s[e]:a[e]=function(){return s[e]}}))},d=r.a.config.optionMergeStrategies,v="__vueRemarkFrontMatter",h={excerpt:null,title:"HTMLCanvasElement"};var l=function(e){e.options[v]&&(e.options[v]=h),r.a.util.defineReactive(e.options,v,h),e.options.computed=d.computed({$frontmatter:function(){return e.options[v]}},e.options.computed)},f=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("VueRemarkRoot",[a("h1",{attrs:{id:"htmlcanvaselement"}},[a("a",{attrs:{href:"#htmlcanvaselement","aria-hidden":"true"}},[e._v("#")]),e._v("HTMLCanvasElement")]),a("div",{staticClass:"overview"},[e._v("The "),a("strong",[a("code",[e._v("HTMLCanvasElement")])]),e._v(" interface provides properties and methods for manipulating the layout and presentation of "),a("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/canvas",title:"Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations."}},[a("code",[e._v("<canvas>")])]),e._v(" elements. The "),a("code",[e._v("HTMLCanvasElement")]),e._v(" interface also inherits the properties and methods of the "),a("a",{attrs:{href:"/en-US/docs/Web/API/HTMLElement",title:"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it."}},[a("code",[e._v("HTMLElement")])]),e._v(" interface.")]),a("h2",{attrs:{id:"properties"}},[a("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),a("ul",{staticClass:"items properties"},[a("li",[a("a",{attrs:{href:""}},[e._v("height")]),a("div",[e._v("Is a positive "),a("code",[e._v("integer")]),e._v(" reflecting the "),a("code",[a("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/canvas#attr-height"}},[e._v("height")])]),e._v(" HTML attribute of the "),a("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/canvas",title:"Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations."}},[a("code",[e._v("<canvas>")])]),e._v(" element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of "),a("code",[e._v("150")]),e._v(" is used.")])]),a("li",[a("a",{attrs:{href:""}},[e._v("width")]),a("div",[e._v("Is a positive "),a("code",[e._v("integer")]),e._v(" reflecting the "),a("code",[a("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/canvas#attr-width"}},[e._v("width")])]),e._v(" HTML attribute of the "),a("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/canvas",title:"Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations."}},[a("code",[e._v("<canvas>")])]),e._v(" element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of "),a("code",[e._v("300")]),e._v(" is used.")])])]),a("h2",{attrs:{id:"methods"}},[a("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),a("ul",{staticClass:"items methods"},[a("li",[a("a",{attrs:{href:""}},[e._v("captureStream()")]),a("div",[e._v("Returns a "),a("a",{attrs:{href:"/en-US/docs/Web/API/CanvasCaptureMediaStream",title:"The documentation about this has not yet been written; please consider contributing!"}},[a("code",[e._v("CanvasCaptureMediaStream")])]),e._v(" that is a real-time video capture of the surface of the canvas.")])]),a("li",[a("a",{attrs:{href:""}},[e._v("getContext()")]),a("div",[e._v("Returns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas. Calling getContext with "),a("code",[e._v('"2d"')]),e._v(" returns a "),a("a",{attrs:{href:"/en-US/docs/Web/API/CanvasRenderingContext2D",title:"The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a <canvas> element. It is used for drawing shapes, text, images, and other objects."}},[a("code",[e._v("CanvasRenderingContext2D")])]),e._v(" object, whereas calling it with "),a("code",[e._v('"webgl"')]),e._v(" (or "),a("code",[e._v('"experimental-webgl"')]),e._v(") returns a "),a("a",{attrs:{href:"/en-US/docs/Web/API/WebGLRenderingContext",title:"The WebGLRenderingContext interface provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element."}},[a("code",[e._v("WebGLRenderingContext")])]),e._v(" object. This context is only available on browsers that implement "),a("a",{attrs:{href:"/en-US/docs/Web/WebGL"}},[e._v("WebGL")]),e._v(".")])]),a("li",[a("a",{attrs:{href:""}},[e._v("toBlob()")]),a("div",[e._v("Creates a "),a("a",{attrs:{href:"/en-US/docs/Web/API/Blob",title:"A Blob object represents a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data. Blobs can represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system."}},[a("code",[e._v("Blob")])]),e._v(" object representing the image contained in the canvas; this file may be cached on the disk or stored in memory at the discretion of the user agent.")])]),a("li",[a("a",{attrs:{href:""}},[e._v("toDataURL()")]),a("div",[e._v("Returns a data-URL containing a representation of the image in the format specified by the "),a("code",[e._v("type")]),e._v(" parameter (defaults to "),a("code",[e._v("png")]),e._v("). The returned image is in a resolution of 96dpi.")])]),a("li",[a("a",{attrs:{href:""}},[e._v("transferControlToOffscreen()")]),a("div",[e._v("Transfers control to an "),a("a",{attrs:{href:"/en-US/docs/Web/API/OffscreenCanvas",title:"The OffscreenCanvas interface provides a canvas that can be rendered off screen. It is available in both&nbsp;the window and&nbsp;worker contexts."}},[a("code",[e._v("OffscreenCanvas")])]),e._v(" object, either on the main thread or on a worker.")])])]),a("h2",{attrs:{id:"events"}},[a("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof c&&c(f),"function"==typeof l&&l(f);t.default=f.exports}}]);