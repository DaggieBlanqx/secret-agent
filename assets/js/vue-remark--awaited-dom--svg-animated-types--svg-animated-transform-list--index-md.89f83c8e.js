(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{695:function(t,e,n){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},781:function(t,e,n){"use strict";n.r(e);var o=n(1),r=n(695),a=n(0);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}a.a.config.optionMergeStrategies;var s={VueRemarkRoot:r.a},f=function(t){var e=t.options.components=t.options.components||{},n=t.options.computed=t.options.computed||{};Object.keys(s).forEach((function(t){"object"===i(s[t])&&"function"==typeof s[t].render?e[t]=s[t]:n[t]=function(){return s[t]}}))},c=a.a.config.optionMergeStrategies,u="__vueRemarkFrontMatter",d={excerpt:null,title:"SVGAnimatedTransformList"};var m=function(t){t.options[u]&&(t.options[u]=d),a.a.util.defineReactive(t.options,u,d),t.options.computed=c.computed({$frontmatter:function(){return t.options[u]}},t.options.computed)},l=Object(o.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("VueRemarkRoot",[n("h1",{attrs:{id:"svganimatedtransformlist"}},[n("a",{attrs:{href:"#svganimatedtransformlist","aria-hidden":"true"}},[t._v("#")]),t._v("SVGAnimatedTransformList")]),n("div",{staticClass:"overview"},[t._v("The "),n("code",[t._v("SVGAnimatedTransformList")]),t._v(" interface is used for attributes which take a list of numbers and which can be animated.")]),n("h2",{attrs:{id:"properties"}},[n("a",{attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v("Properties")]),n("ul",{staticClass:"items properties"},[n("li",[n("a",{attrs:{href:""}},[t._v("animVal")]),n("div",[t._v("A read only "),n("a",{attrs:{href:"/en-US/docs/Web/API/SVGTransformList",title:"The SVGTransformList defines a list of SVGTransform objects."}},[n("code",[t._v("SVGTransformList")])]),t._v(" representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the "),n("a",{attrs:{href:"/en-US/docs/Web/API/SVGTransformList",title:"The SVGTransformList defines a list of SVGTransform objects."}},[n("code",[t._v("SVGTransformList")])]),t._v(" will have the same contents as "),n("code",[t._v("baseVal")]),t._v(". The object referenced by "),n("code",[t._v("animVal")]),t._v(" will always be distinct from the one referenced by "),n("code",[t._v("baseVal")]),t._v(", even when the attribute is not animated.")])]),n("li",[n("a",{attrs:{href:""}},[t._v("baseVal")]),n("div",[t._v("The base value of the given attribute before applying any animations.")])])]),n("h2",{attrs:{id:"methods"}},[n("a",{attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v("Methods")]),n("ul",{staticClass:"items methods"}),n("h2",{attrs:{id:"events"}},[n("a",{attrs:{href:"#events","aria-hidden":"true"}},[t._v("#")]),t._v("Events")])])}),[],!1,null,null,null);"function"==typeof f&&f(l),"function"==typeof m&&m(l);e.default=l.exports}}]);