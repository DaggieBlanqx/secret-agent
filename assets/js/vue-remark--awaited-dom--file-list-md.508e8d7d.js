(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{695:function(e,t,r){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},959:function(e,t,r){"use strict";r.r(t);var i=r(1),n=r(695),o=r(0);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o.a.config.optionMergeStrategies;var a={VueRemarkRoot:n.a},d=function(e){var t=e.options.components=e.options.components||{},r=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===s(a[e])&&"function"==typeof a[e].render?t[e]=a[e]:r[e]=function(){return a[e]}}))},u=o.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",c={excerpt:null,title:"FileList"};var p=function(e){e.options[l]&&(e.options[l]=c),o.a.util.defineReactive(e.options,l,c),e.options.computed=u.computed({$frontmatter:function(){return e.options[l]}},e.options.computed)},f=Object(i.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("VueRemarkRoot",[r("h1",{attrs:{id:"filelist"}},[r("a",{attrs:{href:"#filelist","aria-hidden":"true"}},[e._v("#")]),e._v("FileList")]),r("div",{staticClass:"overview"},[e._v("An object of this type is returned by the "),r("code",[e._v("files")]),e._v(" property of the HTML "),r("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/input",title:"The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. "}},[r("code",[e._v("<input>")])]),e._v(" element; this lets you access the list of files selected with the "),r("code",[e._v('<input type="file">')]),e._v(" element. It's also used for a list of files dropped into web content when using the drag and drop API; see the "),r("a",{attrs:{href:"/en-US/docs/DragDrop/DataTransfer",title:"DragDrop/DataTransfer"}},[r("code",[e._v("DataTransfer")])]),e._v(" object for details on this usage.")]),r("h2",{attrs:{id:"properties"}},[r("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),r("h3",{attrs:{id:"length"}},[r("a",{attrs:{href:"#length","aria-hidden":"true"}},[e._v("#")]),e._v(".length "),r("div",{staticClass:"specs"},[r("i",[e._v("W3C")])])]),r("p",[e._v("A read-only value indicating the number of files in the list.")]),r("h4",{attrs:{id:"type-null"}},[r("a",{attrs:{href:"#type-null","aria-hidden":"true"}},[e._v("#")]),r("strong",[e._v("Type")]),e._v(": "),r("code",{pre:!0},[e._v("null")])]),r("h2",{attrs:{id:"methods"}},[r("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),r("h3",{attrs:{id:"item"}},[r("a",{attrs:{href:"#item","aria-hidden":"true"}},[e._v("#")]),e._v(".item"),r("em",[e._v("(...args)")]),r("div",{staticClass:"specs"},[r("i",[e._v("W3C")])])]),r("p",[e._v("Returns a "),r("a",{attrs:{href:"/en-US/docs/DOM/File",title:"DOM/File"}},[r("code",[e._v("File")])]),e._v(" object representing the file at the specified index in the file list.")]),r("h4",{attrs:{id:"arguments"}},[r("a",{attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),r("strong",[e._v("Arguments")]),e._v(":")]),r("ul",[r("li",[e._v("none")])]),r("h4",{attrs:{id:"returns-promisevoid"}},[r("a",{attrs:{href:"#returns-promisevoid","aria-hidden":"true"}},[e._v("#")]),r("strong",[e._v("Returns")]),e._v(": "),r("code",{pre:!0},[e._v("Promise<void>")])]),r("h2",{attrs:{id:"events"}},[r("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof d&&d(f),"function"==typeof p&&p(f);t.default=f.exports}}]);