(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{695:function(e,t,r){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},975:function(e,t,r){"use strict";r.r(t);var a=r(1),o=r(695),n=r(0);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.a.config.optionMergeStrategies;var i={VueRemarkRoot:o.a},u=function(e){var t=e.options.components=e.options.components||{},r=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===s(i[e])&&"function"==typeof i[e].render?t[e]=i[e]:r[e]=function(){return i[e]}}))},c=n.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",d={excerpt:null,title:"[AwaitedDOM](/docs/basic-interfaces/awaited-dom) <span>/</span> DOMParser"};var f=function(e){e.options[p]&&(e.options[p]=d),n.a.util.defineReactive(e.options,p,d),e.options.computed=c.computed({$frontmatter:function(){return e.options[p]}},e.options.computed)},m=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("VueRemarkRoot",[r("h1",{attrs:{id:"awaiteddom-spanspan-domparser"}},[r("a",{attrs:{href:"#awaiteddom-spanspan-domparser","aria-hidden":"true"}},[e._v("#")]),r("a",{attrs:{href:"/docs/basic-interfaces/awaited-dom"}},[e._v("AwaitedDOM")]),r("span",[e._v("/")]),e._v(" DOMParser")]),r("div",{staticClass:"overview"},[r("span",{staticClass:"seoSummary"},[e._v("The "),r("strong",[r("code",[e._v("DOMParser")])]),e._v(" interface provides the ability to parse "),r("a",{staticClass:"glossaryLink",attrs:{href:"/en-US/docs/Glossary/XML",title:"XML: eXtensible Markup Language (XML) is a generic markup language specified by the W3C. The information technology (IT) industry uses many languages based on XML as data-description languages."}},[e._v("XML")]),e._v(" or "),r("a",{staticClass:"glossaryLink",attrs:{href:"/en-US/docs/Glossary/HTML",title:"HTML: HTML (HyperText Markup Language) is a descriptive language that specifies webpage structure."}},[e._v("HTML")]),e._v(" source code from a string into a DOM "),r("a",{attrs:{href:"/en-US/docs/Web/API/Document",title:"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."}},[r("code",[e._v("Document")])]),e._v(".")])]),r("h2",{attrs:{id:"methods"}},[r("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),r("h3",{attrs:{id:"parseFromString"}},[r("a",{attrs:{href:"#parseFromString","aria-hidden":"true"}},[e._v("#")]),e._v(".parseFromString"),r("em",[e._v("(...args)")]),r("div",{staticClass:"specs"},[r("i",[e._v("W3C")])])]),r("p",[e._v("Parse XML from a string")]),r("h4",{attrs:{id:"arguments"}},[r("a",{attrs:{href:"#arguments","aria-hidden":"true"}},[e._v("#")]),r("strong",[e._v("Arguments")]),e._v(":")]),r("ul",[r("li",[e._v("none")])]),r("h4",{attrs:{id:"returns-promisevoid"}},[r("a",{attrs:{href:"#returns-promisevoid","aria-hidden":"true"}},[e._v("#")]),r("strong",[e._v("Returns")]),e._v(": "),r("code",{pre:!0},[e._v("Promise<void>")])])])}),[],!1,null,null,null);"function"==typeof u&&u(m),"function"==typeof f&&f(m);t.default=m.exports}}]);