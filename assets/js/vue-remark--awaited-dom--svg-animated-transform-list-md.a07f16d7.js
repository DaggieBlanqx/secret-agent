(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{695:function(t,e,r){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},800:function(t,e,r){"use strict";r.r(e);var n=r(1),a=r(695),o=r(0);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}o.a.config.optionMergeStrategies;var s={VueRemarkRoot:a.a},u=function(t){var e=t.options.components=t.options.components||{},r=t.options.computed=t.options.computed||{};Object.keys(s).forEach((function(t){"object"===i(s[t])&&"function"==typeof s[t].render?e[t]=s[t]:r[t]=function(){return s[t]}}))},c=o.a.config.optionMergeStrategies,d="__vueRemarkFrontMatter",f={excerpt:null,title:"SVGAnimatedTransformList"};var p=function(t){t.options[d]&&(t.options[d]=f),o.a.util.defineReactive(t.options,d,f),t.options.computed=c.computed({$frontmatter:function(){return t.options[d]}},t.options.computed)},v=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("VueRemarkRoot",[r("h1",{attrs:{id:"svganimatedtransformlist"}},[r("a",{attrs:{href:"#svganimatedtransformlist","aria-hidden":"true"}},[t._v("#")]),t._v("SVGAnimatedTransformList")]),r("div",{staticClass:"overview"},[t._v("The "),r("code",[t._v("SVGAnimatedTransformList")]),t._v(" interface is used for attributes which take a list of numbers and which can be animated.")]),r("h2",{attrs:{id:"properties"}},[r("a",{attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v("Properties")]),r("h3",{attrs:{id:"animVal"}},[r("a",{attrs:{href:"#animVal","aria-hidden":"true"}},[t._v("#")]),t._v(".animVal "),r("div",{staticClass:"specs"},[r("i",[t._v("W3C")])])]),r("p",[t._v("A read only "),r("a",{attrs:{href:"/en-US/docs/Web/API/SVGTransformList",title:"The SVGTransformList defines a list of SVGTransform objects."}},[r("code",[t._v("SVGTransformList")])]),t._v(" representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the "),r("a",{attrs:{href:"/en-US/docs/Web/API/SVGTransformList",title:"The SVGTransformList defines a list of SVGTransform objects."}},[r("code",[t._v("SVGTransformList")])]),t._v(" will have the same contents as "),r("code",[t._v("baseVal")]),t._v(". The object referenced by "),r("code",[t._v("animVal")]),t._v(" will always be distinct from the one referenced by "),r("code",[t._v("baseVal")]),t._v(", even when the attribute is not animated.")]),r("h4",{attrs:{id:"type-superdocument"}},[r("a",{attrs:{href:"#type-superdocument","aria-hidden":"true"}},[t._v("#")]),r("strong",[t._v("Type")]),t._v(": "),r("code",{pre:!0},[t._v("SuperDocument")])]),r("h3",{attrs:{id:"baseVal"}},[r("a",{attrs:{href:"#baseVal","aria-hidden":"true"}},[t._v("#")]),t._v(".baseVal "),r("div",{staticClass:"specs"},[r("i",[t._v("W3C")])])]),r("p",[t._v("The base value of the given attribute before applying any animations.")]),r("h4",{attrs:{id:"type-superdocument-1"}},[r("a",{attrs:{href:"#type-superdocument-1","aria-hidden":"true"}},[t._v("#")]),r("strong",[t._v("Type")]),t._v(": "),r("code",{pre:!0},[t._v("SuperDocument")])]),r("h2",{attrs:{id:"methods"}},[r("a",{attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v("Methods")]),r("h2",{attrs:{id:"events"}},[r("a",{attrs:{href:"#events","aria-hidden":"true"}},[t._v("#")]),t._v("Events")])])}),[],!1,null,null,null);"function"==typeof u&&u(v),"function"==typeof p&&p(v);e.default=v.exports}}]);