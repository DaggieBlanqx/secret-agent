(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{695:function(t,e,a){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},801:function(t,e,a){"use strict";a.r(e);var n=a(1),r=a(695),o=a(0);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}o.a.config.optionMergeStrategies;var s={VueRemarkRoot:r.a},c=function(t){var e=t.options.components=t.options.components||{},a=t.options.computed=t.options.computed||{};Object.keys(s).forEach((function(t){"object"===i(s[t])&&"function"==typeof s[t].render?e[t]=s[t]:a[t]=function(){return s[t]}}))},d=o.a.config.optionMergeStrategies,f="__vueRemarkFrontMatter",u={excerpt:null,title:"[AwaitedDOM](/docs/basic-interfaces/awaited-dom) <span>/</span> SVGAnimatedTransformList"};var l=function(t){t.options[f]&&(t.options[f]=u),o.a.util.defineReactive(t.options,f,u),t.options.computed=d.computed({$frontmatter:function(){return t.options[f]}},t.options.computed)},p=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("VueRemarkRoot",[a("h1",{attrs:{id:"awaiteddom-spanspan-svganimatedtransformlist"}},[a("a",{attrs:{href:"#awaiteddom-spanspan-svganimatedtransformlist","aria-hidden":"true"}},[t._v("#")]),a("a",{attrs:{href:"/docs/basic-interfaces/awaited-dom"}},[t._v("AwaitedDOM")]),a("span",[t._v("/")]),t._v(" SVGAnimatedTransformList")]),a("div",{staticClass:"overview"},[t._v("The "),a("code",[t._v("SVGAnimatedTransformList")]),t._v(" interface is used for attributes which take a list of numbers and which can be animated.")]),a("h2",{attrs:{id:"properties"}},[a("a",{attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v("Properties")]),a("h3",{attrs:{id:"animVal"}},[a("a",{attrs:{href:"#animVal","aria-hidden":"true"}},[t._v("#")]),t._v(".animVal "),a("div",{staticClass:"specs"},[a("i",[t._v("W3C")])])]),a("p",[t._v("A read only "),a("a",{attrs:{href:"/en-US/docs/Web/API/SVGTransformList",title:"The SVGTransformList defines a list of SVGTransform objects."}},[a("code",[t._v("SVGTransformList")])]),t._v(" representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the "),a("a",{attrs:{href:"/en-US/docs/Web/API/SVGTransformList",title:"The SVGTransformList defines a list of SVGTransform objects."}},[a("code",[t._v("SVGTransformList")])]),t._v(" will have the same contents as "),a("code",[t._v("baseVal")]),t._v(". The object referenced by "),a("code",[t._v("animVal")]),t._v(" will always be distinct from the one referenced by "),a("code",[t._v("baseVal\n")]),t._v(", even when the attribute is not animated.")]),a("h4",{attrs:{id:"type-null"}},[a("a",{attrs:{href:"#type-null","aria-hidden":"true"}},[t._v("#")]),a("strong",[t._v("Type")]),t._v(": "),a("code",{pre:!0},[t._v("null")])]),a("h3",{attrs:{id:"baseVal"}},[a("a",{attrs:{href:"#baseVal","aria-hidden":"true"}},[t._v("#")]),t._v(".baseVal "),a("div",{staticClass:"specs"},[a("i",[t._v("W3C")])])]),a("p",[t._v("The base value of the given attribute before applying any animations.")]),a("h4",{attrs:{id:"type-null-1"}},[a("a",{attrs:{href:"#type-null-1","aria-hidden":"true"}},[t._v("#")]),a("strong",[t._v("Type")]),t._v(": "),a("code",{pre:!0},[t._v("null")])])])}),[],!1,null,null,null);"function"==typeof c&&c(p),"function"==typeof l&&l(p);e.default=p.exports}}]);