(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{695:function(e,t,a){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},805:function(e,t,a){"use strict";a.r(t);var r=a(1),n=a(695),o=a(0);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o.a.config.optionMergeStrategies;var i={VueRemarkRoot:n.a},c=function(e){var t=e.options.components=e.options.components||{},a=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===s(i[e])&&"function"==typeof i[e].render?t[e]=i[e]:a[e]=function(){return i[e]}}))},d=o.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",h={excerpt:null,title:"TextTrackList"};var v=function(e){e.options[l]&&(e.options[l]=h),o.a.util.defineReactive(e.options,l,h),e.options.computed=d.computed({$frontmatter:function(){return e.options[l]}},e.options.computed)},f=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("VueRemarkRoot",[a("h1",{attrs:{id:"texttracklist"}},[a("a",{attrs:{href:"#texttracklist","aria-hidden":"true"}},[e._v("#")]),e._v("TextTrackList")]),a("div",{staticClass:"overview"},[a("span",{staticClass:"seoSummary"},[e._v("The "),a("strong",[a("code",[e._v("TextTrackList")])]),e._v(" interface is used to represent a list of the text tracks defined by the "),a("a",{attrs:{href:"/en-US/docs/Web/HTML/Element/track",title:"The HTML <track> element is used as a child of the media elements <audio> and <video>. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) â€” Web Video Text Tracks or&nbsp;Timed Text Markup Language (TTML)."}},[a("code",[e._v("<track>")])]),e._v(" element, with each track represented by a separate "),a("a",{attrs:{href:"/en-US/docs/Web/API/TextTrack",title:"This interface also inherits properties from EventTarget."}},[a("code",[e._v("textTrack")])]),e._v(" object in the list.")])]),a("div",{staticClass:"overview"},[e._v("Retrieve an instance of this object with "),a("a",{attrs:{href:"/en-US/docs/Web/API/HTMLMediaElement/textTracks",title:"The read-only textTracks property on HTMLMediaElement objects returns a TextTrackList object listing all of the TextTrack objects representing the media element's text tracks"}},[a("code",[e._v("HTMLMediaElement.textTracks")])]),e._v(". The individual tracks can be accessed using array syntax or functions such as "),a("a",{attrs:{href:"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach",title:"The forEach() method executes a provided function once for each array element."}},[a("code",[e._v("forEach()")])]),e._v(" for example.")]),a("h2",{attrs:{id:"properties"}},[a("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),a("ul",{staticClass:"items properties"},[a("li",[a("a",{attrs:{href:""}},[e._v("length")]),a("div",[e._v("The number of tracks in the list.")])]),a("li",[a("a",{attrs:{href:""}},[e._v("onaddtrack")]),a("div",[e._v("An event handler to be called when the "),a("code",[a("a",{attrs:{href:"/en-US/docs/Web/Events/addtrack",title:"/en-US/docs/Web/Events/addtrack"}},[e._v("addtrack")])]),e._v(" event is fired, indicating that a new text track has been added to the media element.")])]),a("li",[a("a",{attrs:{href:""}},[e._v("onchange")]),a("div",[e._v("An event handler to be called when the "),a("code",[a("a",{attrs:{href:"/en-US/docs/Web/Events/change",title:"/en-US/docs/Web/Events/change"}},[e._v("change")])]),e._v(" event occurs.")])]),a("li",[a("a",{attrs:{href:""}},[e._v("onremovetrack")]),a("div",[e._v("An event handler to call when the "),a("code",[a("a",{attrs:{href:"/en-US/docs/Web/Events/removetrack",title:"/en-US/docs/Web/Events/removetrack"}},[e._v("removetrack")])]),e._v(" event is sent, indicating that a text track has been removed from the media element.")])])]),a("h2",{attrs:{id:"methods"}},[a("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),a("ul",{staticClass:"items methods"},[a("li",[a("a",{attrs:{href:""}},[e._v("getTrackById()")]),a("div",[e._v("Returns the "),a("a",{attrs:{href:"/en-US/docs/Web/API/TextTrack",title:"This interface also inherits properties from EventTarget."}},[a("code",[e._v("TextTrack")])]),e._v(" found within the "),a("code",[e._v("TextTrackList")]),e._v(" whose "),a("a",{staticClass:"new",attrs:{href:"/en-US/docs/Web/API/TextTrack/id",rel:"nofollow",title:"The documentation about this has not yet been written; please consider contributing!"}},[a("code",[e._v("id")])]),e._v(" matches the specified string. If no match is found, "),a("code",[e._v("null")]),e._v(" is returned.")])])]),a("h2",{attrs:{id:"events"}},[a("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof c&&c(f),"function"==typeof v&&v(f);t.default=f.exports}}]);