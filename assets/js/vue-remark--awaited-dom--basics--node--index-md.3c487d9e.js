(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{695:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},934:function(e,t,o){"use strict";o.r(t);var n=o(1),a=o(695),i=o(0);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}i.a.config.optionMergeStrategies;var r={VueRemarkRoot:a.a},d=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(r).forEach((function(e){"object"===s(r[e])&&"function"==typeof r[e].render?t[e]=r[e]:o[e]=function(){return r[e]}}))},c=i.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",h={excerpt:null,title:"Node"};var v=function(e){e.options[l]&&(e.options[l]=h),i.a.util.defineReactive(e.options,l,h),e.options.computed=c.computed({$frontmatter:function(){return e.options[l]}},e.options.computed)},f=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"node"}},[o("a",{attrs:{href:"#node","aria-hidden":"true"}},[e._v("#")]),e._v("Node")]),o("div",{staticClass:"overview"},[o("span",{staticClass:"seoSummary"},[o("strong",[o("code",[e._v("Node")])]),e._v(" is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.")])]),o("div",{staticClass:"overview"},[e._v("All of the following interfaces inherit the "),o("code",[e._v("Node")]),e._v(" interface's methods and properties: "),o("a",{attrs:{href:"/en-US/docs/Web/API/Document",title:"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."}},[o("code",[e._v("Document")])]),e._v(", "),o("a",{attrs:{href:"/en-US/docs/Web/API/Element",title:"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element."}},[o("code",[e._v("Element")])]),e._v(", "),o("a",{attrs:{href:"/en-US/docs/Web/API/Attr",title:"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types."}},[o("code",[e._v("Attr")])]),e._v(", "),o("a",{attrs:{href:"/en-US/docs/Web/API/CharacterData",title:"The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren't abstract."}},[o("code",[e._v("CharacterData")])]),e._v(" (which "),o("a",{attrs:{href:"/en-US/docs/Web/API/Text",title:"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children."}},[o("code",[e._v("Text")])]),e._v(", "),o("a",{attrs:{href:"/en-US/docs/Web/API/Comment",title:"The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view."}},[o("code",[e._v("Comment")])]),e._v(", and "),o("a",{attrs:{href:"/en-US/docs/Web/API/CDATASection",title:"The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. The symbols < and & don’t need escaping as they normally do when inside a CDATA section."}},[o("code",[e._v("CDATASection")])]),e._v(" inherit), "),o("a",{attrs:{href:"/en-US/docs/Web/API/ProcessingInstruction",title:"The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction."}},[o("code",[e._v("ProcessingInstruction")])]),e._v(", "),o("a",{attrs:{href:"/en-US/docs/Web/API/DocumentFragment",title:"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document."}},[o("code",[e._v("DocumentFragment")])]),e._v(", "),o("a",{attrs:{href:"/en-US/docs/Web/API/DocumentType",title:"The DocumentType interface represents a Node containing a doctype."}},[o("code",[e._v("DocumentType")])]),e._v(", "),o("a",{attrs:{href:"/en-US/docs/Web/API/Notation",title:"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent."}},[o("code",[e._v("Notation")])]),e._v(", "),o("a",{staticClass:"new",attrs:{href:"/en-US/docs/Web/API/Entity",rel:"nofollow",title:"The documentation about this has not yet been written; please consider contributing!"}},[o("code",[e._v("Entity")])]),e._v(", "),o("a",{staticClass:"new",attrs:{href:"/en-US/docs/Web/API/EntityReference",rel:"nofollow",title:"The documentation about this has not yet been written; please consider contributing!"}},[o("code",[e._v("EntityReference")])])]),o("div",{staticClass:"overview"},[e._v("Those interfaces may return "),o("code",[e._v("null")]),e._v(" in certain cases where the methods and properties are not relevant. They may throw an exception — for example when adding children to a node type for which no children can exist.")]),o("h2",{attrs:{id:"properties"}},[o("a",{attrs:{href:"#properties","aria-hidden":"true"}},[e._v("#")]),e._v("Properties")]),o("ul",{staticClass:"items properties"},[o("li",[o("a",{attrs:{href:""}},[e._v("baseURI")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[o("code",[e._v("DOMString")])]),e._v(" representing the base URL of the document containing the "),o("code",[e._v("Node")]),e._v(".")])]),o("li",[o("a",{attrs:{href:""}},[e._v("childNodes")]),o("div",[e._v("Returns a live "),o("a",{attrs:{href:"/en-US/docs/Web/API/NodeList",title:"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll()."}},[o("code",[e._v("NodeList")])]),e._v(" containing all the children of this node. "),o("a",{attrs:{href:"/en-US/docs/Web/API/NodeList",title:"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll()."}},[o("code",[e._v("NodeList")])]),e._v(" being live means that if the children of the "),o("code",[e._v("Node")]),e._v(" change, the "),o("a",{attrs:{href:"/en-US/docs/Web/API/NodeList",title:"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll()."}},[o("code",[e._v("NodeList")])]),e._v(" object is automatically updated.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("firstChild")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(" representing the first direct child node of the node, or "),o("code",[e._v("null")]),e._v(" if the node has no child.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("isConnected")]),o("div",[e._v("A boolean indicating whether or not the Node is connected (directly or indirectly) to the context object, e.g. the "),o("a",{attrs:{href:"/en-US/docs/Web/API/Document",title:"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."}},[o("code",[e._v("Document")])]),e._v(" object in the case of the normal DOM, or the "),o("a",{attrs:{href:"/en-US/docs/Web/API/ShadowRoot",title:"The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree."}},[o("code",[e._v("ShadowRoot")])]),e._v(" in the case of a shadow DOM.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("lastChild")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(" representing the last direct child node of the node, or "),o("code",[e._v("null")]),e._v(" if the node has no child.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("nextSibling")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(" representing the next node in the tree, or "),o("code",[e._v("null")]),e._v(" if there isn't such node.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("nodeName")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[o("code",[e._v("DOMString")])]),e._v(" containing the name of the "),o("code",[e._v("Node")]),e._v(". The structure of the name will differ with the node type. E.g. An "),o("a",{attrs:{href:"/en-US/docs/Web/API/HTMLElement",title:"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it."}},[o("code",[e._v("HTMLElement")])]),e._v(" will contain the name of the corresponding tag, like "),o("code",[e._v("'audio'")]),e._v(" for an "),o("a",{attrs:{href:"/en-US/docs/Web/API/HTMLAudioElement",title:"The HTMLAudioElement interface provides access to the properties of <audio> elements, as well as methods to manipulate them."}},[o("code",[e._v("HTMLAudioElement")])]),e._v(", a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Text",title:"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children."}},[o("code",[e._v("Text")])]),e._v(" node will have the "),o("code",[e._v("'#text'")]),e._v(" string, or a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Document",title:"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."}},[o("code",[e._v("Document")])]),e._v(" node will have the "),o("code",[e._v("'#document'")]),e._v(" string.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("nodeType")]),o("div",[e._v("Returns an "),o("code",[e._v("unsigned short")]),e._v(" representing the type of the node. Possible values are:\n\t"),o("table",{staticClass:"standard-table"},[o("thead",[o("tr",[o("th",{attrs:{scope:"col"}},[e._v("Name")]),o("th",{attrs:{scope:"col"}},[e._v("Value")])])]),o("tbody",[o("tr",[o("td",[o("code",[e._v("ELEMENT_NODE")])]),o("td",[o("code",[e._v("1")])])]),o("tr",[o("td",[o("code",[e._v("ATTRIBUTE_NODE")]),e._v(" "),o("span",{staticClass:"icon-only-inline",attrs:{title:"This deprecated API should no longer be used, but will probably still work."}},[o("i",{staticClass:"icon-thumbs-down-alt"})])]),o("td",[o("code",[e._v("2")])])]),o("tr",[o("td",[o("code",[e._v("TEXT_NODE")])]),o("td",[o("code",[e._v("3")])])]),o("tr",[o("td",[o("code",[e._v("CDATA_SECTION_NODE")])]),o("td",[o("code",[e._v("4")])])]),o("tr",[o("td",[o("code",[e._v("ENTITY_REFERENCE_NODE")]),e._v(" "),o("span",{staticClass:"icon-only-inline",attrs:{title:"This deprecated API should no longer be used, but will probably still work."}},[o("i",{staticClass:"icon-thumbs-down-alt"})])]),o("td",[o("code",[e._v("5")])])]),o("tr",[o("td",[o("code",[e._v("ENTITY_NODE")]),e._v(" "),o("span",{staticClass:"icon-only-inline",attrs:{title:"This deprecated API should no longer be used, but will probably still work."}},[o("i",{staticClass:"icon-thumbs-down-alt"})])]),o("td",[o("code",[e._v("6")])])]),o("tr",[o("td",[o("code",[e._v("PROCESSING_INSTRUCTION_NODE")])]),o("td",[o("code",[e._v("7")])])]),o("tr",[o("td",[o("code",[e._v("COMMENT_NODE")])]),o("td",[o("code",[e._v("8")])])]),o("tr",[o("td",[o("code",[e._v("DOCUMENT_NODE")])]),o("td",[o("code",[e._v("9")])])]),o("tr",[o("td",[o("code",[e._v("DOCUMENT_TYPE_NODE")])]),o("td",[o("code",[e._v("10")])])]),o("tr",[o("td",[o("code",[e._v("DOCUMENT_FRAGMENT_NODE")])]),o("td",[o("code",[e._v("11")])])]),o("tr",[o("td",[o("code",[e._v("NOTATION_NODE")]),e._v(" "),o("span",{staticClass:"icon-only-inline",attrs:{title:"This deprecated API should no longer be used, but will probably still work."}},[o("i",{staticClass:"icon-thumbs-down-alt"})])]),o("td",[o("code",[e._v("12")])])])])])])]),o("li",[o("a",{attrs:{href:""}},[e._v("nodeValue")]),o("div",[e._v("Returns / Sets the value of the current node.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("ownerDocument")]),o("div",[e._v("Returns the "),o("a",{attrs:{href:"/en-US/docs/Web/API/Document",title:"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."}},[o("code",[e._v("Document")])]),e._v(" that this node belongs to. If the node is itself a document, returns "),o("code",[e._v("null")]),e._v(".")])]),o("li",[o("a",{attrs:{href:""}},[e._v("parentElement")]),o("div",[e._v("Returns an "),o("a",{attrs:{href:"/en-US/docs/Web/API/Element",title:"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element."}},[o("code",[e._v("Element")])]),e._v(" that is the parent of this node. If the node has no parent, or if that parent is not an "),o("a",{attrs:{href:"/en-US/docs/Web/API/Element",title:"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element."}},[o("code",[e._v("Element")])]),e._v(", this property returns "),o("code",[e._v("null")]),e._v(".")])]),o("li",[o("a",{attrs:{href:""}},[e._v("parentNode")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(" that is the parent of this node. If there is no such node, like if this node is the top of the tree or if doesn't participate in a tree, this property returns "),o("code",[e._v("null")]),e._v(".")])]),o("li",[o("a",{attrs:{href:""}},[e._v("previousSibling")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(" representing the previous node in the tree, or "),o("code",[e._v("null")]),e._v(" if there isn't such node.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("textContent")]),o("div",[e._v("Returns / Sets the textual content of an element and all its descendants.")])])]),o("h2",{attrs:{id:"methods"}},[o("a",{attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v("Methods")]),o("ul",{staticClass:"items methods"},[o("li",[o("a",{attrs:{href:""}},[e._v("appendChild()")]),o("div",[e._v("Adds the specified "),o("code",[o("var",[e._v("childNode")])]),e._v(" argument as the last child to the current node."),o("br"),e._v("\n\tIf the argument referenced an existing node on the DOM tree, the node will be detached from its current position and attached at the new position.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("cloneNode()")]),o("div",[e._v("Clone a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(", and optionally, all of its contents. By default, it clones the content of the node.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("compareDocumentPosition()")]),o("div",[e._v("Compares the position of the current node against another node in any other document.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("contains()")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",title:"The Boolean object is an object wrapper for a boolean value."}},[o("code",[e._v("Boolean")])]),e._v(" value indicating whether or not a node is a descendant of the calling node.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("getRootNode()")]),o("div",[e._v("Returns the context object's root which optionally includes the shadow root if it is available. ")])]),o("li",[o("a",{attrs:{href:""}},[e._v("hasChildNodes()")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",title:"The Boolean object is an object wrapper for a boolean value."}},[o("code",[e._v("Boolean")])]),e._v(" indicating whether or not the element has any child nodes.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("insertBefore()")]),o("div",[e._v("Inserts a "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(" before the reference node as a child of a specified parent node.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("isDefaultNamespace()")]),o("div",[e._v("Accepts a namespace URI as an argument and returns a "),o("a",{attrs:{href:"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",title:"The Boolean object is an object wrapper for a boolean value."}},[o("code",[e._v("Boolean")])]),e._v(" with a value of "),o("code",[e._v("true")]),e._v(" if the namespace is the default namespace on the given node or "),o("code",[e._v("false")]),e._v(" if not.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("isEqualNode()")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",title:"The Boolean object is an object wrapper for a boolean value."}},[o("code",[e._v("Boolean")])]),e._v(" which indicates whether or not two nodes are of the same type and all their defining data points match.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("isSameNode()")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",title:"The Boolean object is an object wrapper for a boolean value."}},[o("code",[e._v("Boolean")])]),e._v(" value indicating whether or not the two nodes are the same (that is, they reference the same object).")])]),o("li",[o("a",{attrs:{href:""}},[e._v("lookupNamespaceURI()")]),o("div",[e._v("Accepts a prefix and returns the namespace URI associated with it on the given node if found (and "),o("code",[e._v("null")]),e._v(" if not). Supplying "),o("code",[e._v("null")]),e._v(" for the prefix will return the default namespace.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("lookupPrefix()")]),o("div",[e._v("Returns a "),o("a",{attrs:{href:"/en-US/docs/Web/API/DOMString",title:"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String."}},[o("code",[e._v("DOMString")])]),e._v(" containing the prefix for a given namespace URI, if present, and "),o("code",[e._v("null")]),e._v(" if not. When multiple prefixes are possible, the result is implementation-dependent.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("normalize()")]),o("div",[e._v("Clean up all the text nodes under this element (merge adjacent, remove empty).")])]),o("li",[o("a",{attrs:{href:""}},[e._v("removeChild()")]),o("div",[e._v("Removes a child node from the current element, which must be a child of the current node.")])]),o("li",[o("a",{attrs:{href:""}},[e._v("replaceChild()")]),o("div",[e._v("Replaces one child "),o("a",{attrs:{href:"/en-US/docs/Web/API/Node",title:"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way."}},[o("code",[e._v("Node")])]),e._v(" of the current one with the second one given in parameter.")])])]),o("h2",{attrs:{id:"events"}},[o("a",{attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v("Events")])])}),[],!1,null,null,null);"function"==typeof d&&d(f),"function"==typeof v&&v(f);t.default=f.exports}}]);