name: Test Matrix

on:
  push:
    branches:
      - '*'
      - '!gh-pages'

jobs:
  test:
    name: Test Node.js ${{ matrix.node-version }} on ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node-version: [12, 13]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --immutable
        env:
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          SA_REPLAY_SKIP_BINARY_DOWNLOAD: 1

      - name: Run "build" step
        run: npm run build --if-present
        env:
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          SA_REPLAY_SKIP_BINARY_DOWNLOAD: 1

      - name: Run tests
        run: yarn jest --testTimeout=15000 --runInBand
        working-directory: ./build
        env:
          SA_SHOW_REPLAY: false
          CACHE_DIR: .sessions
          NODE_ENV: test

      - name: Coverage
        run: npm -g install codecov && codecov
        working-directory: ./build
        if: ${{ matrix.node-version == '12' && matrix.os == 'ubuntu-latest' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
